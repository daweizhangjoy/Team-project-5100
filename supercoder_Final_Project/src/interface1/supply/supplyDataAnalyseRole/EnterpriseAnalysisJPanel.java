/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interface1.supply.supplyDataAnalyseRole;

import Business.Communal_Communal_PurchaseRequest.PurchaseRequest;
import Business.Communal_Communal_PurchaseRequest.PurchaseRequestDirectory;
import Business.Total_UserAccount.UserAccount;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.Organization;
import java.awt.CardLayout;
import java.awt.Font;
import java.util.HashMap;
import java.util.Map;
import keeptoo.KGradientPanel;

/**
 *
 * @author 15142087777的AW
 */
public class EnterpriseAnalysisJPanel extends keeptoo.KGradientPanel {

    /**
     * Creates new form SupplyOutcomeJPanel
     */
    private KGradientPanel userProcessContainer;
    private Network network;
    private Enterprise enterprise;
    private UserAccount account;
    private Organization organization;
    private EcoSystem business;
    
    public EnterpriseAnalysisJPanel(KGradientPanel userProcessContainer, UserAccount account, Organization organization, Enterprise enterprise, Network network, EcoSystem business) {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.network = network;
        this.enterprise = enterprise;
        this.account = account;
        this.organization = organization;
        this.business = business;
        
        valueLabel.setText(enterprise.getName());
        
        populateCombo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        kGradientPanel1 = new keeptoo.KGradientPanel();
        jLabel1 = new javax.swing.JLabel();
        enterpriseLabel = new javax.swing.JLabel();
        valueLabel = new javax.swing.JLabel();
        backJButton2 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        generateButton = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        kGradientPanel1.setkEndColor(new java.awt.Color(255, 204, 204));
        kGradientPanel1.setkStartColor(new java.awt.Color(204, 255, 255));
        kGradientPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Enterprise Analysis");
        kGradientPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 40, -1, -1));

        enterpriseLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        enterpriseLabel.setText("EnterPrise :");
        kGradientPanel1.add(enterpriseLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 90, 130, 30));

        valueLabel.setText("<value>");
        kGradientPanel1.add(valueLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 100, 130, -1));

        backJButton2.setText("<< Back");
        backJButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButton2ActionPerformed(evt);
            }
        });
        kGradientPanel1.add(backJButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, -1));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        kGradientPanel1.add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 240, 370, 50));

        jLabel2.setText("Select a company from below and show the specific supply requirement situation");
        kGradientPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 130, -1, 70));

        generateButton.setText("Generate");
        generateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateButtonActionPerformed(evt);
            }
        });
        kGradientPanel1.add(generateButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 410, -1, -1));

        add(kGradientPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 700, 700));
    }// </editor-fold>//GEN-END:initComponents

    private void backJButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButton2ActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButton2ActionPerformed

    private void generateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateButtonActionPerformed
        // TODO add your handling code here:
        Enterprise enterprise1 = (Enterprise) jComboBox1.getSelectedItem();
        
        Font font = new Font("新宋体", Font.BOLD, 15);
        
        Map<String, Double> supplyQuantityCount = new HashMap<>();
        
        for(PurchaseRequest purchaseRequest : network.getPurchaseRequestDirectory().getPurchaseRequestsList())
        {
            if(enterprise1.getEnterpriseID() == purchaseRequest.getEnterpriseNum())
            {
                double quantityCount = 0;
            
                if(supplyQuantityCount.containsKey(String.valueOf(purchaseRequest.getSupplyId())))
                {
                    quantityCount = supplyQuantityCount.get(String.valueOf(purchaseRequest.getSupplyId()));
                }
            
                quantityCount += purchaseRequest.getSupplyQuantity();
            
                supplyQuantityCount.put(String.valueOf(purchaseRequest.getSupplyId()), quantityCount);
            }
        }
        
        CharReport_BZT.createPort("Enterprise Purchase Analysis", supplyQuantityCount, font);
        
        PictureJPanel pictureJPanel = new PictureJPanel(userProcessContainer, account, organization, enterprise, network, business);
        userProcessContainer.add("pictureJPanel", pictureJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_generateButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton2;
    private javax.swing.JLabel enterpriseLabel;
    private javax.swing.JButton generateButton;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private keeptoo.KGradientPanel kGradientPanel1;
    private javax.swing.JLabel valueLabel;
    // End of variables declaration//GEN-END:variables

    private void populateCombo()
    {
        jComboBox1.removeAllItems();
        
        for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList())
        {
//            jComboBox1.addItem("No." + String.valueOf(enterprise.getEnterpriseID()) + " " + enterprise.getName());
            jComboBox1.addItem(enterprise.toString());
        }
    }
}
