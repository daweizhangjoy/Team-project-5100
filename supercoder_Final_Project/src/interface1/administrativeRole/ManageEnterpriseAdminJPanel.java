/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package interface1.administrativeRole;

import Business.EcoSystem;
import Business.Total_Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Enterprise.Enterprise.EnterpriseType;
import static Business.Enterprise.Enterprise.EnterpriseType.Hospital;
import static Business.Enterprise.Enterprise.EnterpriseType.Shelter;
import static Business.Enterprise.Enterprise.EnterpriseType.Supply;
import Business.Network.Network;
import Business.Role.HospitalAdminRole;
import Business.Role.ShelterAdminRole;
import Business.Role.SupplyAdminRole;
import Business.Role.SystemAdminRole;
import Business.Total_UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import keeptoo.KGradientPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author raunak
 */
public class ManageEnterpriseAdminJPanel extends keeptoo.KGradientPanel {

    private KGradientPanel userProcessContainer;
    private EcoSystem system;

    /**
     * Creates new form ManageEnterpriseJPanel
     */
    public ManageEnterpriseAdminJPanel(KGradientPanel userProcessContainer, EcoSystem system) {
        initComponents();

        this.userProcessContainer = userProcessContainer;
        this.system = system;

        populateTable();
        populateNetworkComboBox();
    }

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) enterpriseJTable.getModel();

        model.setRowCount(0);
//        for (Network network : system.getNetworkDirectory().getNetworkList()) {
//            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
//                for (UserAccount userAccount : enterprise.getUserAccountDirectory().getUserAccountList()) {
//                    Object[] row = new Object[3];
//                    row[0] = enterprise.getName();
//                    row[1] = network.getName();
//                    row[2] = userAccount.getUsername();
//
//                    model.addRow(row);
//                }
//            }
//        }
        for(UserAccount userAccount : system.getUserAccountDirectory().getUserAccountList())
        {
            Object[] row = new Object[4];
            row[0] = userAccount.getEnterpriseName();
            row[1] = userAccount.getEnterpriseType();
            row[2] = userAccount.getNetworkName();
            row[3] = userAccount.getUsername();

            model.addRow(row);
        }
    }

    private void populateNetworkComboBox(){
        networkJComboBox.removeAllItems();
        
        for (Network network : system.getNetworkDirectory().getNetworkList()){
            networkJComboBox.addItem(network);
        }
    }
    
    private void populateEnterpriseComboBox(Network network){
        enterpriseJComboBox.removeAllItems();
        
        for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()){
            enterpriseJComboBox.addItem(enterprise);
        }
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        kGradientPanel1 = new keeptoo.KGradientPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        enterpriseJTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        networkJComboBox = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        usernameJTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        enterpriseJComboBox = new javax.swing.JComboBox();
        submitJButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        nameJTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        passwordJPasswordField = new javax.swing.JPasswordField();
        backJButton = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(700, 7000));

        kGradientPanel1.setkEndColor(new java.awt.Color(255, 204, 204));
        kGradientPanel1.setkStartColor(new java.awt.Color(204, 255, 255));
        kGradientPanel1.setPreferredSize(new java.awt.Dimension(700, 700));
        kGradientPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        enterpriseJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Enterprise Name", "RnterpriseType", "Network", "Username"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(enterpriseJTable);

        kGradientPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(39, 58, 523, 95));

        jLabel1.setText("Network");
        kGradientPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(88, 201, -1, -1));

        networkJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        networkJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                networkJComboBoxActionPerformed(evt);
            }
        });
        kGradientPanel1.add(networkJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(211, 198, 136, -1));

        jLabel2.setText("Username");
        kGradientPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(88, 302, -1, -1));
        kGradientPanel1.add(usernameJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(211, 299, 136, -1));

        jLabel3.setText("Enterprise");
        kGradientPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(88, 258, -1, -1));

        enterpriseJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        enterpriseJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterpriseJComboBoxActionPerformed(evt);
            }
        });
        kGradientPanel1.add(enterpriseJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(211, 255, 136, -1));

        submitJButton.setText("Submit");
        submitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitJButtonActionPerformed(evt);
            }
        });
        kGradientPanel1.add(submitJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 452, -1, -1));

        jLabel4.setText("Password");
        kGradientPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(88, 346, -1, -1));
        kGradientPanel1.add(nameJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(207, 387, 136, -1));

        jLabel5.setText("Name");
        kGradientPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(88, 390, -1, -1));
        kGradientPanel1.add(passwordJPasswordField, new org.netbeans.lib.awtextra.AbsoluteConstraints(209, 343, 134, -1));

        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        kGradientPanel1.add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 443, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void networkJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_networkJComboBoxActionPerformed

        Network network = (Network) networkJComboBox.getSelectedItem();
        if (network != null){
            populateEnterpriseComboBox(network);
        }
        
        
    }//GEN-LAST:event_networkJComboBoxActionPerformed

    private void submitJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitJButtonActionPerformed
        
        Enterprise enterprise = (Enterprise) enterpriseJComboBox.getSelectedItem();
        EnterpriseType enterpriseType = enterprise.getEnterpriseType();
        int enterpriseID = enterprise.getEnterpriseID();
        String enterpriseName = enterprise.getName();
        
        Network network = (Network) networkJComboBox.getSelectedItem();
        int networkID = network.getNetworkID();
        String networkName = network.getName();
        
        String username = usernameJTextField.getText();
        String password = String.valueOf(passwordJPasswordField.getPassword());
        String name = nameJTextField.getText();
        
//        Employee employee = system.getEmployeeDirectory().createEmployee(name);
        
        if(!system.getUserAccountDirectory().checkIfUsernameIsUnique(username))
        {
            JOptionPane.showMessageDialog(null, "username has been registered");
        }
        else
        {      
            if(enterpriseType.equals(Hospital))
            {
                Employee employee = system.getEmployeeDirectory().createEmployeeAdmin(name, networkID, enterpriseID, networkName, enterpriseName,"HospitalAdmin");
                UserAccount account = system.getUserAccountDirectory().createUserAccountAdmin(username, password, employee, new HospitalAdminRole(), 
                                                                                        networkID, enterpriseID, 
                                                                                        networkName, enterpriseName, "HospitalAdmin", 
                                                                                        Hospital);
            }
            else if(enterpriseType.equals(Shelter))
            {
                Employee employee = system.getEmployeeDirectory().createEmployeeAdmin(name, networkID, enterpriseID, networkName, enterpriseName,"ShelterAdmin");
                UserAccount account = system.getUserAccountDirectory().createUserAccountAdmin(username, password, employee, new ShelterAdminRole(), 
                                                                                        networkID, enterpriseID, 
                                                                                        networkName, enterpriseName, "ShelterAdmin", 
                                                                                        Shelter);
            }
            else if(enterpriseType.equals(Supply))
            {
                Employee employee = system.getEmployeeDirectory().createEmployeeAdmin(name, networkID, enterpriseID, networkName, enterpriseName,"SupplyAdmin");
                UserAccount account = system.getUserAccountDirectory().createUserAccountAdmin(username, password, employee, new SupplyAdminRole(), 
                                                                                        networkID, enterpriseID, 
                                                                                        networkName, enterpriseName, "SupplyAdmin", 
                                                                                        Supply);
            }
        }
//        UserAccount account = system.getUserAccountDirectory().createUserAccount(username, password, employee, new SystemAdminRole());
        populateTable();
        
    }//GEN-LAST:event_submitJButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        userProcessContainer.remove(this);
         Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        SystemAdminWorkAreaJPanel sysAdminwjp = (SystemAdminWorkAreaJPanel) component;
        sysAdminwjp.populateTree();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void enterpriseJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterpriseJComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_enterpriseJComboBoxActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JComboBox enterpriseJComboBox;
    private javax.swing.JTable enterpriseJTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private keeptoo.KGradientPanel kGradientPanel1;
    private javax.swing.JTextField nameJTextField;
    private javax.swing.JComboBox networkJComboBox;
    private javax.swing.JPasswordField passwordJPasswordField;
    private javax.swing.JButton submitJButton;
    private javax.swing.JTextField usernameJTextField;
    // End of variables declaration//GEN-END:variables
}
