/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interface1.shelter.SupplyManageRole;

import Business.EcoSystem;

import Business.Enterprise.ShelterEnterprise;
import Business.Shelter_TotalSupply.TotalSupply;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.Total_UserAccount.UserAccount;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import keeptoo.KGradientPanel;

/**
 *
 * @author 15142087777çš„AW
 */
public class ShelterSupplyManageJPanel extends keeptoo.KGradientPanel {

    /**
     * Creates new form AdoptAdminJPanel
     */
    
    KGradientPanel userProcessContainer;
    UserAccount account;
    Organization organization;
    ShelterEnterprise shelterEnterprise;
    Network network;
    EcoSystem business;
    
    public ShelterSupplyManageJPanel(KGradientPanel userProcessContainer, UserAccount account, Organization organization, ShelterEnterprise shelterEnterprise, Network network, EcoSystem business) 
    {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.organization = organization;
        this.shelterEnterprise = shelterEnterprise;
        this.network = network;
        this.business = business;
        
        populateTable();
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        kGradientPanel1 = new keeptoo.KGradientPanel();
        jLabel1 = new javax.swing.JLabel();
        enterpriseLabel = new javax.swing.JLabel();
        valueLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        supplyTable = new javax.swing.JTable();
        addButton = new javax.swing.JButton();
        editButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(700, 700));
        setLayout(new java.awt.CardLayout());

        kGradientPanel1.setkEndColor(new java.awt.Color(255, 204, 204));
        kGradientPanel1.setkStartColor(new java.awt.Color(204, 255, 255));
        kGradientPanel1.setPreferredSize(new java.awt.Dimension(700, 700));
        kGradientPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("My Work Area -Supply Management");
        kGradientPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 40, 460, -1));

        enterpriseLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        enterpriseLabel.setText("EnterPrise :");
        kGradientPanel1.add(enterpriseLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 90, 110, 30));

        valueLabel.setText("<value>");
        kGradientPanel1.add(valueLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 100, 160, -1));

        supplyTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "SupplyId", "SupplyName", "Quantity"
            }
        ));
        jScrollPane1.setViewportView(supplyTable);

        kGradientPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 130, -1, 320));

        addButton.setText("Add new Supply");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });
        kGradientPanel1.add(addButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 520, -1, -1));

        editButton.setText("Edit");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });
        kGradientPanel1.add(editButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(287, 520, 100, -1));

        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });
        kGradientPanel1.add(deleteButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 520, 90, -1));

        add(kGradientPanel1, "card2");
    }// </editor-fold>//GEN-END:initComponents

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = supplyTable.getSelectedRow();
        if(selectedRow<0)
        {
            JOptionPane.showMessageDialog(null, "Please select a Row!!");
            populateTable();
        }
        else
        {
            TotalSupply supply = (TotalSupply)supplyTable.getValueAt(selectedRow, 0);
            
            DistibuteSupplyJPanel muajp = new DistibuteSupplyJPanel(userProcessContainer, account, organization, shelterEnterprise, network, business, supply);
            userProcessContainer.add("EditSupplyJPanel", muajp);

            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }
    }//GEN-LAST:event_editButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = supplyTable.getSelectedRow();
        if(selectedRow<0)
        {
            JOptionPane.showMessageDialog(null, "Please select a Row!!");
            populateTable();
        }
        else
        {
            int selectionButton = JOptionPane.YES_NO_OPTION;
            int selectionResult = JOptionPane.showConfirmDialog(null, "Are you sure to delete??","Warning",selectionButton);
            
            if(selectionResult == JOptionPane.YES_OPTION)
            {
                TotalSupply totalSupply = (TotalSupply)supplyTable.getValueAt(selectedRow, 0);
                shelterEnterprise.getShelterTotalSupplyDirectory().deleteTotalSupply(totalSupply);
                
                populateTable();
            }
            
            populateTable();
        }
        
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // TODO add your handling code here:
        AddSupplyJPanel muajp = new AddSupplyJPanel(userProcessContainer, account, organization, shelterEnterprise, network, business);
        userProcessContainer.add("AddSupplyJPanel", muajp);

        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_addButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton editButton;
    private javax.swing.JLabel enterpriseLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private keeptoo.KGradientPanel kGradientPanel1;
    private javax.swing.JTable supplyTable;
    private javax.swing.JLabel valueLabel;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) supplyTable.getModel();
        
        model.setRowCount(0);
        
        for (TotalSupply supply : shelterEnterprise.getShelterTotalSupplyDirectory().getTotalSupplyList())
        {
            Object[] row = new Object[3];
            row[0] = supply;
            row[1] = supply.getSupplyName();
            row[1] = supply.getSupplyQuantity();
            
            model.addRow(row);
        }
    }
}
